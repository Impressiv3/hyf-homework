{"ast":null,"code":"var _jsxFileName = \"E:\\\\Github\\\\hyf-homework\\\\react\\\\week2\\\\todolist\\\\src\\\\ToDoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport todosData from \"./todosData\";\nimport ToDoItem from \"./ToDoItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ToDoList() {\n  _s();\n\n  const [dataObject, setDataObject] = useState([]);\n  const toDoItems = todosData.map(toDoItem => /*#__PURE__*/_jsxDEV(ToDoItem, {\n    toDoItem: toDoItem\n  }, toDoItem.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 47\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [\"     \", toDoItems]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(ToDoList, \"nAM9REr5cfnPJpUQST7wSfdVU2w=\");\n\n_c = ToDoList;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["E:/Github/hyf-homework/react/week2/todolist/src/ToDoList.js"],"names":["React","useState","useEffect","todosData","ToDoItem","ToDoList","dataObject","setDataObject","toDoItems","map","toDoItem","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAMO,SAAS,GAAGL,SAAS,CAACM,GAAV,CAAcC,QAAQ,iBAAI,QAAC,QAAD;AAA4B,IAAA,QAAQ,EAAEA;AAAtC,KAAeA,QAAQ,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,UAA1B,CAAlB;AAEA,sBACE;AAAA,2BACA;AAAA,0BAAUH,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAMD;;GAXuBH,Q;;KAAAA,Q;AAWvB","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport todosData from \"./todosData\";\r\nimport ToDoItem from \"./ToDoItem\";\r\n\r\nexport default function ToDoList() {\r\n  const [dataObject, setDataObject] = useState([])\r\n\r\n  const toDoItems = todosData.map(toDoItem => <ToDoItem key={toDoItem.id} toDoItem={toDoItem}/>)\r\n\r\n  return (\r\n    <>\r\n    <ul>     {toDoItems}</ul>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}