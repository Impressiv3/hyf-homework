{"ast":null,"code":"var _jsxFileName = \"E:\\\\Github\\\\hyf-homework\\\\react\\\\week2\\\\todolist\\\\src\\\\ToDoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ToDoItem from \"./ToDoItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ToDoList = () => {\n  _s();\n\n  const [timer, setTimer] = useState(0);\n  let intervalId;\n\n  const changeTimer = () => {\n    setTimer(prev => prev + 1);\n  };\n\n  const startTimer = () => {\n    // check if already an interval has been set up\n    if (!intervalId) {\n      intervalId = setInterval(changeTimer, 1000);\n    }\n  };\n\n  const stopTimer = () => {\n    clearInterval(intervalId);\n    intervalId = null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"You have spent \", timer, \" sec on this page.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoItem, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ToDoList, \"YfkIw2x09LwS269JUM8Nobh8BTk=\");\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["E:/Github/hyf-homework/react/week2/todolist/src/ToDoList.js"],"names":["React","useState","useEffect","ToDoItem","ToDoList","timer","setTimer","intervalId","changeTimer","prev","startTimer","setInterval","stopTimer","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,QAAP,MAAqB,YAArB;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;AACA,MAAIM,UAAJ;;AACA,QAAMC,WAAW,GAAG,MAAM;AACxBF,IAAAA,QAAQ,CAAEG,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAR;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACvB;AACA,QAAI,CAACH,UAAL,EAAiB;AACfA,MAAAA,UAAU,GAAGI,WAAW,CAACH,WAAD,EAAc,IAAd,CAAxB;AACD;AACF,GALD;;AAOA,QAAMI,SAAS,GAAG,MAAM;AACtBC,IAAAA,aAAa,CAACN,UAAD,CAAb;AACAA,IAAAA,UAAU,GAAG,IAAb;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,oCAAoBF,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD,CA1BD;;GAAMD,Q;;KAAAA,Q;AA4BN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport ToDoItem from \"./ToDoItem\";\r\n\r\nconst ToDoList = () => {\r\n  const [timer, setTimer] = useState(0);\r\n  let intervalId;\r\n  const changeTimer = () => {\r\n    setTimer((prev) => prev + 1);\r\n  };\r\n\r\n  const startTimer = () => {\r\n    // check if already an interval has been set up\r\n    if (!intervalId) {\r\n      intervalId = setInterval(changeTimer, 1000);\r\n    }\r\n  };\r\n\r\n  const stopTimer = () => {\r\n    clearInterval(intervalId);\r\n    intervalId = null; \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>To Do List</h1>\r\n      <h3>You have spent {timer} sec on this page.</h3>\r\n      <ToDoItem />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ToDoList;\r\n"]},"metadata":{},"sourceType":"module"}